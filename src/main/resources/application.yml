spring:
  data:
    redis:
      host: localhost
      port: 6379

  datasource:
    url: jdbc:postgresql://localhost:5432/booking
    username: postgres
    password: postgres
    hikari:
      schema: booking_app
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS booking_app

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          auto: none
    generate-ddl: false

  liquibase:
    enabled: true
    drop-first: false
    change-log: classpath:changelog_init.xml
    default-schema: booking_app

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: StatisticGroup

app:
  jwt:
    secret: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    expireToken: 50m
    expireRefreshToken: 190m
  kafka_topics:
    registration-user-topic: "registration-user"
    booking-room-topic: "booking-room"

